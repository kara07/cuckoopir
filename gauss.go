package cuckoopir

import _ "fmt"

// std_dev = 6.4
var cdf_table_6p4 = [...]float64{
	0.5, 0.987867, 0.952345, 0.895957, 0.822578, 0.736994, 0.644389, 0.549831, 0.457833, 0.372034,
	0.295023, 0.22831, 0.172422, 0.127074, 0.0913938, 0.0641467, 0.0439369, 0.0293685, 0.0191572,
	0.0121949, 0.00757568, 0.00459264, 0.00271706, 0.00156868, 0.000883826, 0.000485955, 0.000260749,
	0.000136536, 6.97696e-05, 3.47923e-05, 1.69316e-05, 8.041e-06, 3.72665e-06, 1.68549e-06,
	7.43923e-07, 3.20426e-07, 1.34687e-07, 5.52484e-08, 2.21163e-08, 8.63973e-09,
	3.29371e-09, 1.22537e-09, 4.44886e-10, 1.57625e-10, 5.45004e-11, 1.83896e-11,
	6.05535e-12, 1.94583e-12, 6.10194e-13, 1.86736e-13, 5.57679e-14, 1.62532e-14,
	4.62263e-15, 1.28303e-15, 3.47522e-16, 9.18597e-17, 2.36954e-17, 5.96487e-18,
	1.46533e-18, 3.5129e-19, 8.21851e-20, 1.87637e-20, 4.18062e-21, 9.08991e-22, 1.92875e-22,
	3.99383e-23, 8.07049e-24, 1.5915e-24, 3.06275e-25, 5.75194e-26, 1.05418e-26, 1.88542e-27,
	3.29081e-28, 5.60522e-29, 9.31708e-30, 1.51135e-30, 2.39247e-31, 3.69594e-32,
	5.57187e-33, 8.19735e-34, 1.17691e-34, 1.64896e-35, 2.25463e-36, 3.00841e-37,
	3.91737e-38, 4.97795e-39, 6.1731e-40, 7.47055e-41, 8.82266e-42, 1.01682e-42, 1.14363e-43,
	1.25523e-44, 1.34449e-45, 1.40537e-46, 1.43357e-47, 1.42708e-48, 1.38634e-49,
	1.31429e-50, 1.21593e-51, 1.0978e-52, 9.67246e-54, 8.31661e-55, 6.97835e-56, 5.71421e-57,
	4.56622e-58, 3.56086e-59, 2.70987e-60, 2.01252e-61, 1.45858e-62, 1.03161e-63,
	7.12032e-65, 4.79601e-66, 3.15252e-67, 2.02224e-68, 1.26591e-69, 7.73344e-71, 4.6104e-72,
	2.68226e-73, 1.52287e-74, 8.4376e-76, 4.56219e-77, 2.40727e-78, 1.23958e-79, 6.22901e-81,
	3.05465e-82, 1.46185e-83, 6.82713e-85, 3.11152e-86, 1.3839e-87,
}

// std_dev = 1
var cdf_table_1 = [...]float64{
	0.5, 0.4578333617716143, 0.043936933623407434, 0.0008838263069350515, 3.7266531720786777e-06, 3.2937141103060925e-09, 6.101936677605367e-13, 2.369541747340193e-17, 1.9287498479639315e-22, 3.290806277274959e-28, 1.176910943921689e-34, 8.822664357494803e-42, 1.3863432936412101e-49, 4.56621846799426e-58, 3.152517155145115e-67, 4.562187213172471e-77, 1.3838965267367769e-87, 8.799317893789583e-99, 1.1727603332849226e-110, 3.276305574229551e-123, 1.9185556689348942e-136, 2.3549369378030894e-150, 6.058973183257031e-165, 3.2676358406799337e-180, 3.693883068487676e-196, 8.75281014057458e-213, 4.347371408870115e-230, 4.5260656967793574e-248, 9.877108721521013e-267, 4.518077612006297e-286, 4.332039538514894e-306, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
} 

// std_dev = 3
var cdf_table_3 = [...]float64{
	0.5, 0.9459594689067654, 0.8007374029168081, 0.6065306597126334, 0.41111229050718745, 0.24935220877729622, 0.1353352832366127, 0.06572852861653047, 0.028565500784550377, 0.011108996538242306, 0.0038659201394728076, 0.001203859994828203, 0.00033546262790251185, 8.364834722972752e-05, 1.866446911352057e-05, 3.726653172078671e-06, 6.658361469857315e-07, 1.0645371411076024e-07, 1.522997974471263e-08, 1.9497677860172307e-09, 2.233631436203166e-10, 2.289734845645553e-11, 2.1004092927322525e-12, 1.724120939035512e-13, 1.2664165549094176e-14, 8.323969676981166e-16, 4.8958652645860795e-17, 2.576757109154981e-18, 1.213563668125796e-19, 5.114423731803711e-21, 1.9287498479639178e-22, 6.5087885154679006e-24, 1.9654838241636744e-25, 5.311092249679095e-27, 1.2842313672676012e-28, 2.7787390183170706e-30, 5.380186160021138e-32, 9.321630933398905e-34, 1.4452120129541253e-35, 2.005008781961654e-37, 2.4891212533275478e-39, 2.765163938648108e-41, 2.7487850079102147e-43, 2.4451512024555155e-45, 1.9463266273143046e-47, 1.3863432936411706e-49, 8.836309217492346e-52, 5.039832258351181e-54, 2.572209372642415e-56, 1.174739598533454e-58, 4.800892238919265e-61, 1.7556880978548265e-63, 5.745367715230481e-66, 1.6824158527128005e-68, 4.408531331463226e-71, 1.0337120265673203e-73, 2.1689536131352462e-76, 4.0723586257611754e-79, 6.842059184017448e-82, 1.0286619937923979e-84, 1.3838965267367376e-87, 1.6660176655200467e-90, 1.7947362817304938e-93, 1.73008220968259e-96, 1.4923747614760575e-99, 1.1519512724636078e-102, 7.9567438919514e-106, 4.917922806045514e-109, 2.720026237617272e-112, 1.3461998461573202e-115, 5.961987174638857e-119, 2.3627490426729678e-122, 8.378942533819369e-126, 2.6589237633496464e-129, 7.550359258120274e-133, 1.918555668934785e-136, 4.362407702468618e-140, 8.876119801807612e-144, 1.616088413820251e-147, 2.633007739358096e-151, 3.838700348963704e-155, 5.007965706612792e-159, 5.84633285607385e-163, 6.1073215636491134e-167, 5.709040105864101e-171, 4.7755176912374886e-175, 3.5745623785021315e-179, 2.394254760948756e-183, 1.4350363324396062e-187, 7.696627910991492e-192, 3.693883068487256e-196, 1.5863932499301823e-200, 6.096542709417836e-205, 2.0965317582885168e-209, 6.45155386977958e-214, 1.776528863623507e-218, 4.377491037053051e-223, 9.652133513733217e-228, 1.904436223412861e-232, 3.3624404663242076e-237, 5.312364080113972e-242, 7.510452727943757e-247, 9.501440650208043e-252, 1.07561750249298e-256, 1.0896105976579289e-261, 9.87710872151989e-267, 8.011861027895e-272, 5.815432755751544e-277, 3.7772499723621244e-282, 2.1954041086169845e-287, 1.1418216572867824e-292, 5.314068364454539e-298, 2.2131000901411116e-303, 8.247456471051965e-309, 2.7503253126e-314, 8.207e-320, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
}



// The function below is modeled on Martin Albrecht's discrete-Gaussian
// sampler included in his dgs library:
//    https://github.com/malb/dgs
func GaussSample() int64 {
	mrand := MathRand()

	cdf_table := cdf_table_1
	
	var x int64
	var y float64
	for {
		x = int64(mrand.Intn(len(cdf_table)))
		// fmt.Println("x:", x)
		y = mrand.Float64()
		// fmt.Println("y:", y)

		if y < cdf_table[x] {
			// fmt.Println("BREAK!!!!____y:", y)

			break
		}
	}

	if mrand.Uint64()%2 == 0 {
		// fmt.Println("invert x:", x, -x)
		x = -x
	}

	return x
}
